#!/bin/bash

# Hangman
# By Duncan Verbrugge and Stef de Goey
# Assessment Operating Systems 1
# 15-03-2017

#
# Functions
#

function printWord() {
    local pos=()

    local lowerCaseAnswer=$(echo $word | tr '[:upper:]' '[:lower:]')

    for (( i = 0; i < ${#word}; i++ )); do
        if [ "${lowerCaseAnswer:$i:1}" = "$gues" ]; then
            pos+=($i)
        fi
    done

    letters+=($gues)
    echo "${letters[*]}"

    if [[ "${#pos}" = 0 ]]; then
        let wrongGuesses+=1
        return
    fi

    for (( i = 0; i < ${#pos[@]}; i++ )); do
	start=$(( ${pos[$i]} ))
	end=$(( start + 1))
        hiddenWord="${hiddenWord:0:$start}${word:${pos[$i]}:1}${hiddenWord:$end}"
    done
}

function printWrongGuesses() {
    #statements
    #echo "printWrongGuesses";
	return
}

function printGallow() {
  wrongGuesses=$1
  case $wrongGuesses in
    1)
      echo "     ";
      echo "     ";
      echo "     ";
      echo "     ";
      echo "     ";
      echo "|____";
      ;;
    2)
      echo "     ";
      echo "|    ";
      echo "|    ";
      echo "|    ";
      echo "|    ";
      echo "|____";
      ;;
    3)
      echo "____ ";
      echo "|    ";
      echo "|    ";
      echo "|    ";
      echo "|    ";
      echo "|____";
      ;;
    4)
      echo "____ ";
      echo "|/   ";
      echo "|    ";
      echo "|    ";
      echo "|    ";
      echo "|____";
      ;;
    5)
      echo "____ ";
      echo "|/ | ";
      echo "|    ";
      echo "|    ";
      echo "|    ";
      echo "|____";
      ;;
    6)
      echo "____ ";
      echo "|/ | ";
      echo "|  O ";
      echo "|    ";
      echo "|    ";
      echo "|____";
      ;;
    7)
      echo "____ ";
      echo "|/ | ";
      echo "|  O ";
      echo "|  | ";
      echo "|    ";
      echo "|____";
      ;;
    8)
      echo "____ ";
      echo "|/ | ";
      echo "|  O ";
      echo "| /| ";
      echo "|    ";
      echo "|____";
      ;;
    9)
      echo "____ ";
      echo "|/ | ";
      echo "|  O ";
      echo "| /|\\";
      echo "|    ";
      echo "|____";
      ;;
    10)
      echo "____ ";
      echo "|/ | ";
      echo "|  O ";
      echo "| /|\\";
      echo "| /  ";
      echo "|____";
      ;;
    11)
      echo "____ ";
      echo "|/ | ";
      echo "|  O ";
      echo "| /|\\";
      echo "| / \\";
      echo "|____";
      ;;
  esac
}

function handleInput() {
  #statements
    #echo "handleInput";
    read -n 1 gues
}

function getRandomWord() {
  if [[ -z $dictonary ]]; then
    word=$(head -$((${RANDOM} % `wc -l < words.txt` + 1)) words.txt | tail -1)
  else
    word=$(head -$((${RANDOM} % `wc -l < $dictonary` + 1)) $dictonary | tail -1)
  fi
  for (( i=0; i<${#word}; i++ )); do
  hiddenWord+="_"
  done
  echo $hiddenWord
}

#
# Main program.
#

while  getopts ":w:d:" option; do
  case "${option}" in
    w)
      word=${OPTARG}
      ;;
    d)
      dictonary=${OPTARG}
      ;;
  esac
done

if [[ -z $word ]]; then
  getRandomWord
fi

gameover=false;
wrongGuesses=0;

printf "\ec"
printf "Welkom bij Galgje. \n \n";
printf "Using dictonary: $dictonary\n"

while [[ $wrongGuesses -lt 11 ]]; do
  printWord
  echo $hiddenWord
  printWrongGuesses
  printGallow $wrongGuesses
  handleInput
  printf "\ec"
done

printf "Game over! thanks for playing"
read
exit 1
